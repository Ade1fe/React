
import { Box, Text, Tab, TabList, TabPanel, TabPanels, Tabs } from "@chakra-ui/react";
import { useState } from "react";
import { FaBusinessTime, FaFile, FaFileImport, FaFileWord, FaIdeal, FaMendeley, FaPen, FaPersonBooth, FaTasks } from "react-icons/fa";
import { ReactElement,  } from "react";
import PersonalComponent from "../personal";
import WorkComponent from "../work";
import WriteComponent from "../write";
import { FileManagementComponent } from "../..";
import { FileItem } from "../../../interface";



type Folder = {
  name: string;
  component: React.ReactNode;
};


interface ContentBoxProps {
  index: number;  // Add index property
  icon: ReactElement;
  title: string;
  description: string;
  bgColor: string;
  component?: React.ReactNode;
}


const HomeComponent = () => {
  const [selectedTab, setSelectedTab] = useState(0);
  const [folders, setFolders] = useState<Folder[]>([]);

  

  const handleTabChange = (index: number) => {
    setSelectedTab(index);
  };
  
  const addFolder = (folderName: string) => {
    const newFolder: Folder = {
      name: folderName,
      component: <FileManagementComponent key={folderName} />,
    };
    setFolders([...folders, newFolder]);
  };
  

  const handleAddFolder = () => {
    const folderName = prompt('Enter the folder name:');
    if (folderName) {
      addFolder(folderName);
      handleTabChange(folders.length);
    }
  };
  

  const renderContent = () => {
    console.log("Selected Tab: ", selectedTab);
    switch (selectedTab) {
      case 0:
        return   <>
        <Text>Popular Cate</Text>
        <Box className="" mt={['1rem', '1rem' ,'1rem']}
         gap={['10px', '15px', '20px']} display='flex' 
         justifyContent={['center','center', 'space-around']} flexWrap='wrap'>
        {contentData.map((content, index) => (
      <ContentBox key={index} {...content} index={index} />
        ))}

      </Box>
        </>
      case 1:
        return (
          <>
            <Text>Personal</Text>
            <PersonalComponent />
          </>
        );

        case 2:
          return (
            <>
              <Text>Work</Text>
              <WorkComponent />
            </>
          );

          case 3:
            return (
              <>
                <Text>Writing</Text>
                <WriteComponent />
              </>
            );

      // Add cases for other tabs with respective content
      default:
        return null;
    }
  };
  

  const contentData = [
    {
      icon: <FaFile size={25} />,
      title: 'Plans',
      description: 'Write your dream article and blog',
      bgColor: '#a06cd5',
      path: '/plans',
    },
    {
      icon: <FaPersonBooth size={25} />,
      title: 'Personal',
      description: 'Write your dream article and blog',
      bgColor: '#be99ff',
      component: <PersonalComponent />,
    },

    {
      icon: <FaFileWord size={25} />,
      title: 'Work',
      description: 'Write your dream article and blog',
      bgColor: '#916dd5',
      component: <WorkComponent />,
    },

    {
      icon: <FaPen size={25} />,
      title: 'Writing',
      description: 'Write your dream article and blog',
      bgColor: '#bfacfb',
      component: <WriteComponent />
    },

    {
      icon: <FaMendeley size={25} />,
      title: 'Tasks',
      description: 'Write your dream article and blog',
      bgColor: '#dec9e9',
    },
    {
      icon: <FaIdeal size={25} />,
      title: 'Plans',
      description: 'Write your dream article and blog',
      bgColor: '#f3c4fb',
    },

    {
      icon: <FaBusinessTime size={25} />,
      title: 'Business',
      description: 'Write your dream article and blog',
      bgColor: '#e0aaff',
    },

    {
      icon: <FaTasks size={25} />,
      title: 'Tasks',
      description: 'Write your dream article and blog',
      bgColor: '#b67be6',
    },


  


    {
      icon: <FaFileImport size={25} />,
      title: 'Important',
      description: 'Write your dream article and blog',
      bgColor: '#d0bef2',
    },

  ];

  const ContentBox = ({ index, icon, title, description, bgColor,  }: ContentBoxProps) => (
    <Box
      display='flex'
      onClick={() => handleTabChange(index)}
      w={['20rem','45rem' , '30rem', '25rem']}
      alignItems={'center'}
      borderRadius={'10px'}
      gap='20px'
      py={'2rem'}
      px='1rem'
      className=""
      bg={bgColor}
      color='black'
    >
      <Box display='flex' alignContent='center' justifyContent='center' bg='white' p='10px' borderRadius='50%' className="">
        {icon}
      </Box>
      <Box className="">
        <Text fontSize={['md', 'lg']} fontWeight={'bold'}>
          {title}
        </Text>
        <Text>{description}</Text>
      </Box>
    </Box>
  );
  
  
  
  

  return (
    <Box>
      <Box className="" textAlign="center">
        <Text as="h1" fontWeight="bold" fontSize={["md", "lg", "x-large"]}>
          <Text as="span">Johanna</Text>, So what exactly do you have in mind?
        </Text>
        <Text>Begin with selecting the content type from the options below</Text>
      </Box>

      <Tabs onChange={handleTabChange} mt={['30px', '40px', '50px']}>
      <Box  className="custom-scrollbar"
      style={{ overflowX: "auto", display: "flex" ,scrollbarWidth: "thin", scrollbarColor: "#fff #fff"}}>
        <TabList  borderBottom="none" gap={['10px', '15px', '20px']}
         justifyContent={['center', 'center', 'center', 'center']}
         textAlign='center' mx='auto'
        >
           <Tab bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>All</Tab>
          <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Personal</Tab>
          <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Work</Tab>
          <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Writing</Tab>
          <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Business</Tab>
          <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Important</Tab>
          <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Plans</Tab>
          <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Tasks</Tab>
          <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Ideas</Tab>
          {/* <Tab  bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Add Folder</Tab> */}
          {/* {folders.map((folder, index) => (
    <Tab key={index} bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>{folder}</Tab>
  ))}
  <Tab onClick={() => handleAddFolder()} bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Add Folder</Tab> */}
        {folders.map((folder, index) => (
    <Tab key={index} bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>{folder.name}</Tab>
  ))}
  <Tab onClick={() => handleAddFolder()} bg='#f9f9f9f9' shadow='sm' borderRadius='10px' border="1px" borderColor="#f9f9f9f9" mb="2" pb="2" _selected={{ borderColor: "purple.200" }}>Add Folder</Tab>


        </TabList>
        </Box>

        <TabPanels>
        
          <TabPanel>{renderContent()}</TabPanel>
          <TabPanel>{renderContent()}</TabPanel>
          <TabPanel>{renderContent()}</TabPanel>
          <TabPanel>{renderContent()}</TabPanel>
          <TabPanel>{renderContent()}</TabPanel>
          <TabPanel>{renderContent()}</TabPanel>
          <TabPanel>{renderContent()}</TabPanel>
          <TabPanel>{renderContent()}</TabPanel>
          <TabPanel>{renderContent()}</TabPanel>
          {folders.map((folder, index) => (
    <TabPanel key={index}>{selectedTab === index ? folder.component : null}</TabPanel>
  ))}
        </TabPanels>
      </Tabs>


 

    </Box>
  );
};

export default HomeComponent;



